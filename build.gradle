plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'groovy'
    id 'jacoco'
}

group = 'com.allstate-onboarding'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    jaxb
}

repositories {
    mavenCentral()
}

dependencies {
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-artemis'
    implementation 'org.springframework:spring-jms:6.0.9'
    implementation 'wsdl4j:wsdl4j:1.6.3'
    implementation 'commons-io:commons-io:2.12.0'
    implementation 'org.modelmapper:modelmapper:3.0.0'

    testImplementation 'org.apache.groovy:groovy-all:4.0.12'
    testImplementation 'org.spockframework:spock-core:2.4-M1-groovy-4.0'
    testImplementation 'org.spockframework:spock-spring:2.4-M1-groovy-4.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.ws:spring-ws-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation "org.testcontainers:spock:1.18.3"

    jaxb(
            'com.sun.xml.bind:jaxb-xjc:4.0.2',
            'com.sun.xml.bind:jaxb-impl:4.0.2',
            'org.glassfish.jaxb:jaxb-runtime:4.0.2'
    )
}

jacocoTestReport {
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

tasks.named("jacocoTestReport") {
    dependsOn test // tests are required to run before generating the report
}

tasks.register('jaxb') {
    System.setProperty('javax.xml.accessExternalSchema', 'all')
    def jaxbTargetDir = file("src/main/java")
    doLast {
        jaxbTargetDir.mkdirs()
        ant.taskdef(
                name: 'xjc',
                classname: 'com.sun.tools.xjc.XJCTask',
                classpath: configurations.jaxb.asPath
        )
        ant.jaxbTargetDir = jaxbTargetDir
        ant.xjc(
                destdir: '${jaxbTargetDir}',
                package: 'com.allstateonboarding.policydetailssoap.generated',
                schema: 'src/main/resources/xsd/policy-details.xsd'
        )
        ant.xjc(
                destdir: '${jaxbTargetDir}',
                package: 'com.allstateonboarding.policydetailsrest.generated',
                schema: 'src/main/resources/xsd/policy-details.xsd'
        )
    }
}

compileJava.dependsOn jaxb

